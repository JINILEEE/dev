.box{
    border: 3px solid black;
    width: 200px;
    height: 200px;
}

#t01:hover{
    transform: translateX(100px);
    background-color: gray;
    transition:1500ms; /* 0.5초에 걸려 해당요소가 움직임 */
    transition-timing-function: cubic-bezier(.82,-0.01,.64,1.06);
}

@keyframes kh {
    0%{
        background-color: red;
        transform: perspective(100px) rotate3d(1,1,1,45deg);
    }
    25%{
        background-color: beige;
        transform: perspective(100px) rotate3d(1,1,1,0deg);
    }
    50%{
        background-color: blue;
        transform: perspective(100px) rotate3d(1,1,1,90deg);
    }
    75%{
        background-color: brown;
        transform: perspective(100px) rotate3d(1,1,1,0deg);
    }
    100%{
        background-color: black;
    }
}

#t02:hover{
    animation-name: kh;
    animation-duration: 4s;
    animation-timing-function: linear;  /* linear: 시간의 흐름 동일하게 */
    animation-delay: 3s;
    animation-iteration-count: 2;
    animation-direction: alternate;  /* alternate: r->b->b->r 순서로 보인다.*/
    animation-direction: alternate-reverse;  /* alternate-reverse: b->r->r->b 순서로 보인다.*/
    animation-direction: normal;  
    animation-fill-mode: both;  
    /*
        [animation-fill-mode]
    
        non         : 기본
        forwards    : 애니메이션이 끝나고, 애니메이션의 마지막 상태(100%)유지
        backwards   : 애니메이션 처음에, 처음상태(0%)를 가짐 -> 딜레이를 줘봐야 확실하게 볼 수 있다.
        both        : forwards, backwards 두 특성을 모두 가짐
    */
    /* animation-play-state: paused; */
}





#t02:hover{
    /* animation-play-state: paused; */
}



